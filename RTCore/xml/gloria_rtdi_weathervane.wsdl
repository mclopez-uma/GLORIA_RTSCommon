<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- ****************************************** -->
<!-- * Archive: Gloria RTDI WeatherVane       * -->
<!-- * Author: Juan Cabello                   * -->
<!-- * Date  : 13/09/2012                     * -->
<!-- ****************************************** -->
<wsdl:definitions xmlns:gloria.rt.entity.device="http://gloria.eu/rt/entity/device" xmlns:gloria.rtdi.fault="http://gloria.eu/rtdi/fault" xmlns:rtdi.weathervane="http://gloria.eu/rtdi.weathervane" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="gloria_rtdi_weathervane" targetNamespace="http://gloria.eu/rtdi.weathervane">
  <wsdl:types>
    <xsd:schema targetNamespace="http://gloria.eu/rtdi.weathervane">
    
      <xsd:import namespace="http://gloria.eu/rtdi/fault" schemaLocation="gloria_rtdi_fault.xsd"/> 
      <xsd:import namespace="http://gloria.eu/rt/entity/device" schemaLocation="gloria_rti_device.xsd"/>
      
      <!-- BASIC TYPE RESPONSES - BEGIN -->
      
	  <xsd:element name="voidResponse">
        <xsd:complexType>
          <xsd:sequence>            
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
	  
      <xsd:element name="stringResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="out" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      <xsd:element name="booleanResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="out" type="xsd:boolean"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      <xsd:element name="intResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="out" type="xsd:int"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      <xsd:element name="longResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="out" type="xsd:long"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      <xsd:element name="doubleResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="out" type="xsd:double"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      <!-- BASIC TYPE RESPONSES - END -->
            
      <!-- COMMON DEVICE ELEMENTS - BEGIN -->
      <xsd:element name="devGetConfiguration">
        <xsd:complexType>
          <xsd:sequence>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="devGetDeviceProperties">
        <xsd:complexType>
          <xsd:sequence>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="devGetDevicePropertiesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="out" type="gloria.rt.entity.device:deviceProperty"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
     <xsd:element name="devGetDeviceProperty">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="devGetDevicePropertyResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="out" type="gloria.rt.entity.device:deviceProperty"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
     <xsd:element name="devIsConnected">
        <xsd:complexType>
          <xsd:sequence>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="devGetDevice">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="allProperties" type="xsd:boolean"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="devGetDeviceResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="out" type="gloria.rt.entity.device:device"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="devUpdateDeviceProperty">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="value" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="devUpdateDevicePropertyAsync">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="value" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="devConnect">
        <xsd:complexType>
          <xsd:sequence>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="devDisconnect">
        <xsd:complexType>
          <xsd:sequence>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="devIsBlocked">
        <xsd:complexType>
          <xsd:sequence>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <!-- COMMON DEVICE ELEMENTS - END -->
      
      <!-- WEATHERVANE ELEMENTS - BEGIN -->
      <xsd:element name="wvnGetMeasureUnit">
        <xsd:complexType>
          <xsd:sequence>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="wvnGetMeasureUnitResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="out" type="gloria.rt.entity.device:measureUnit"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
       <xsd:element name="wvnGetMeasure">
        <xsd:complexType>
          <xsd:sequence>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
       <xsd:element name="wvnGetAbosluteDegrees">
        <xsd:complexType>
          <xsd:sequence>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
       <xsd:element name="wvnSetMeasureStates">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="states" type="gloria.rt.entity.device:sensorStateIntervalDouble"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
       <xsd:element name="wvnGetMeasureStates">
        <xsd:complexType>
          <xsd:sequence>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="wvnGetMeasureStatesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="out" type="gloria.rt.entity.device:sensorStateIntervalDouble"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <!-- WEATHERVANE ELEMENTS - END -->
      
    </xsd:schema> 
  </wsdl:types>
  
  <!-- ERROR MESSAGES - BEGIN -->
  <wsdl:message name="rtdError">
    <wsdl:part element="gloria.rtdi.fault:errorDetail" name="rtdError">    
    </wsdl:part>
  </wsdl:message>
  <!-- ERROR MESSAGES - END -->
  
  <!-- COMMON DEVICE MESSAGES - BEGIN -->
  <wsdl:message name="devGetConfigurationRequest">
    <wsdl:part element="rtdi.weathervane:devGetConfiguration" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="devGetConfigurationResponse">
    <wsdl:part element="rtdi.weathervane:stringResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="devGetDeviceRequest">
    <wsdl:part element="rtdi.weathervane:devGetDevice" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="devGetDeviceResponse">
    <wsdl:part element="rtdi.weathervane:devGetDeviceResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  
  
  <wsdl:message name="devGetDevicePropertiesRequest">
    <wsdl:part element="rtdi.weathervane:devGetDeviceProperties" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="devGetDevicePropertiesResponse">
    <wsdl:part element="rtdi.weathervane:devGetDevicePropertiesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  
  <wsdl:message name="devGetDevicePropertyRequest">
    <wsdl:part element="rtdi.weathervane:devGetDeviceProperty" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="devGetDevicePropertyResponse">
    <wsdl:part element="rtdi.weathervane:devGetDevicePropertyResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  
  <wsdl:message name="devUpdateDevicePropertyRequest">
    <wsdl:part element="rtdi.weathervane:devUpdateDeviceProperty" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="devUpdateDevicePropertyResponse">
    <wsdl:part element="rtdi.weathervane:voidResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  
  <wsdl:message name="devUpdateDevicePropertyAsyncRequest">
    <wsdl:part element="rtdi.weathervane:devUpdateDevicePropertyAsync" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="devUpdateDevicePropertyAsyncResponse">
    <wsdl:part element="rtdi.weathervane:voidResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  
   <wsdl:message name="devIsConnectedRequest">
    <wsdl:part element="rtdi.weathervane:devIsConnected" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="devIsConnectedResponse">
    <wsdl:part element="rtdi.weathervane:booleanResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  
  <wsdl:message name="devConnectRequest">
    <wsdl:part element="rtdi.weathervane:devConnect" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="devConnectResponse">
    <wsdl:part element="rtdi.weathervane:voidResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  
  <wsdl:message name="devDisconnectRequest">
    <wsdl:part element="rtdi.weathervane:devDisconnect" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="devDisconnectResponse">
    <wsdl:part element="rtdi.weathervane:voidResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="devIsBlockedRequest">
    <wsdl:part element="rtdi.weathervane:devIsBlocked" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="devIsBlockedResponse">
    <wsdl:part element="rtdi.weathervane:booleanResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  
  <!-- COMMON DEVICE MESSAGES - END -->
 
  
  <!-- WEATHERVANE DEVICE MESSAGES - BEGIN -->
  <wsdl:message name="wvnGetMeasureUnitRequest">
    <wsdl:part element="rtdi.weathervane:wvnGetMeasureUnit" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="wvnGetMeasureUnitResponse">
    <wsdl:part element="rtdi.weathervane:wvnGetMeasureUnitResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="wvnGetMeasureRequest">
    <wsdl:part element="rtdi.weathervane:wvnGetMeasure" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="wvnGetMeasureResponse">
    <wsdl:part element="rtdi.weathervane:doubleResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="wvnGetAbosluteDegreesRequest">
    <wsdl:part element="rtdi.weathervane:wvnGetAbosluteDegrees" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="wvnGetAbosluteDegreesResponse">
    <wsdl:part element="rtdi.weathervane:doubleResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="wvnSetMeasureStatesRequest">
    <wsdl:part element="rtdi.weathervane:wvnSetMeasureStates" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="wvnSetMeasureStatesResponse">
    <wsdl:part element="rtdi.weathervane:voidResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="wvnGetMeasureStatesRequest">
    <wsdl:part element="rtdi.weathervane:wvnGetMeasureStates" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="wvnGetMeasureStatesResponse">
    <wsdl:part element="rtdi.weathervane:wvnGetMeasureStatesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <!-- WEATHERVANE DEVICE MESSAGES - END -->
  
  
  <wsdl:portType name="gloria_rtdi_weathervane"> 
  
  	<!-- COMMON DEVICE PORT TYPE OPS - BEGIN -->    
    <wsdl:operation name="devGetDevice">
	  <wsdl:documentation>
	  Recover the information of one device.
	  @param session Session token if the used login method is based on session token type.
	  @param deviceId Device Identifier.
	  @return Current device data.
	  @throws rtdError In error case.
	  </wsdl:documentation>
      <wsdl:input message="rtdi.weathervane:devGetDeviceRequest">
    </wsdl:input>
      <wsdl:output message="rtdi.weathervane:devGetDeviceResponse">
    </wsdl:output>
    <wsdl:fault message="rtdi.weathervane:rtdError" name="error"/>
    </wsdl:operation>
    
    <wsdl:operation name="devGetDeviceProperties">
	  <wsdl:documentation>
	  Recover the properties of a device.
	  @param session Session token if the used login method is based on session token type.
	  @param deviceId Device Identifier.
	  @return Properties List.
	  @throws rtdError In error case.
	  </wsdl:documentation>
      <wsdl:input message="rtdi.weathervane:devGetDevicePropertiesRequest">
    </wsdl:input>
      <wsdl:output message="rtdi.weathervane:devGetDevicePropertiesResponse">
    </wsdl:output>
    <wsdl:fault message="rtdi.weathervane:rtdError" name="error"/>
    </wsdl:operation>
    
    <wsdl:operation name="devGetDeviceProperty">
	  <wsdl:documentation>
	  Recover a property of a device.
	  @param name Property name
	  @return Properties List.
	  @throws RtiError In error case.
	  </wsdl:documentation>
      <wsdl:input message="rtdi.weathervane:devGetDevicePropertyRequest">
    </wsdl:input>
      <wsdl:output message="rtdi.weathervane:devGetDevicePropertyResponse">
    </wsdl:output>
    <wsdl:fault message="rtdi.weathervane:rtdError" name="error"/>
    </wsdl:operation>
    
    <wsdl:operation name="devUpdateDeviceProperty">
	  <wsdl:documentation>
	  Updates a property into a Device configuration. If the property is a readonly property or the value cannot be (internally) transformed into the proper type, an exception will be throw.
	  @param session Session token if the used login method is based on session token type.
	  @param deviceId Device Identifier.
	  @param name Property name.
	  @param value Values of the property.
	  @throws rtdError In error case.
	  </wsdl:documentation>
      <wsdl:input message="rtdi.weathervane:devUpdateDevicePropertyRequest">
    </wsdl:input>
      <wsdl:output message="rtdi.weathervane:devUpdateDevicePropertyResponse">
    </wsdl:output>
    <wsdl:fault message="rtdi.weathervane:rtdError" name="error"/>
    </wsdl:operation>
    
    <wsdl:operation name="devUpdateDevicePropertyAsync">
	  <wsdl:documentation>
	  Updates a property into a Device configuration. If the property is a readonly property or the value cannot be (internally) transformed into the proper type, an exception will be throw.
	  Asynchronous call.
	  @param session Session token if the used login method is based on session token type.
	  @param deviceId Device Identifier.
	  @param name Property name.
	  @param value Values of the property.
	  @throws rtdError In error case.
	  </wsdl:documentation>
      <wsdl:input message="rtdi.weathervane:devUpdateDevicePropertyAsyncRequest">
    </wsdl:input>
      <wsdl:output message="rtdi.weathervane:devUpdateDevicePropertyAsyncResponse">
    </wsdl:output>
    <wsdl:fault message="rtdi.weathervane:rtdError" name="error"/>
    </wsdl:operation>
    
    <wsdl:operation name="devIsConnected">
	  <wsdl:documentation>
	  Checks the link between the driver and the device. If True, the link is enable.
	  @param session Session token if the used login method is based on session token type.
	  @param deviceId Device Identifier.
	  @return boolean.
	  @throws rtdError In error case.
	  </wsdl:documentation>
      <wsdl:input message="rtdi.weathervane:devIsConnectedRequest">
    </wsdl:input>
      <wsdl:output message="rtdi.weathervane:devIsConnectedResponse">
    </wsdl:output>
    <wsdl:fault message="rtdi.weathervane:rtdError" name="error"/>
    </wsdl:operation>
    
    <wsdl:operation name="devConnect">
	  <wsdl:documentation>
	  Creates the link between the driver and the device.
	  @param session Session token if the used login method is based on session token type.
	  @param deviceId Device Identifier.
	  @throws rtdError In error case.
	  </wsdl:documentation>
      <wsdl:input message="rtdi.weathervane:devConnectRequest">
    </wsdl:input>
      <wsdl:output message="rtdi.weathervane:devConnectResponse">
    </wsdl:output>
    <wsdl:fault message="rtdi.weathervane:rtdError" name="error"/>
    </wsdl:operation>
    
    <wsdl:operation name="devDisconnect">
	  <wsdl:documentation>
	  Controls the link between the driver and the device. Set True to enable the link. Set False to disable the link.
	  @param session Session token if the used login method is based on session token type.
	  @param deviceId Device Identifier.
	  @throws rtdError In error case.
	  </wsdl:documentation>
      <wsdl:input message="rtdi.weathervane:devDisconnectRequest">
    </wsdl:input>
      <wsdl:output message="rtdi.weathervane:devDisconnectResponse">
    </wsdl:output>
    <wsdl:fault message="rtdi.weathervane:rtdError" name="error"/>
    </wsdl:operation>
    
    <wsdl:operation name="devGetConfiguration">
	  <wsdl:documentation>
	  Returns a String containing a full configuration information. For logging purpose.
	  @param session Session token if the used login method is based on session token type.
	  @param deviceId Device Id.
	  @return Configuration in a string.
	  @throws rtdError In error case.
	  </wsdl:documentation>
      <wsdl:input message="rtdi.weathervane:devGetConfigurationRequest">
    </wsdl:input>
      <wsdl:output message="rtdi.weathervane:devGetConfigurationResponse">
    </wsdl:output>
    <wsdl:fault message="rtdi.weathervane:rtdError" name="error"/>
    </wsdl:operation>
    
     <wsdl:operation name="devIsBlocked">
	  <wsdl:documentation>
	  Returns true if the device is blocked because of its blocked state or some dependency to other device.
	  @throws RtdError In error case.
	  </wsdl:documentation>
      <wsdl:input message="rtdi.weathervane:devIsBlockedRequest">
    </wsdl:input>
      <wsdl:output message="rtdi.weathervane:devIsBlockedResponse">
    </wsdl:output>
    <wsdl:fault message="rtdi.weathervane:rtdError" name="error"/>
    </wsdl:operation>
    <!-- COMMON DEVICE PORT TYPE OPS - END -->
    
    
    <!-- WEATHERVANE PORT TYPE OPS - BEGIN -->
   <wsdl:operation name="wvnGetMeasureUnit">
	  <wsdl:documentation>
	  Returns the measure units of the sensor (DEGREES). 
	  @param session Session token if the used login method is based on session token type.
	  @param deviceId Device identifier.
	  @return MeasureUnit.
	  @throws RtiError In error case.
	  </wsdl:documentation>
      <wsdl:input message="rtdi.weathervane:wvnGetMeasureUnitRequest">
      </wsdl:input>
      <wsdl:output message="rtdi.weathervane:wvnGetMeasureUnitResponse">
      </wsdl:output>
    <wsdl:fault message="rtdi.weathervane:rtdError" name="error"/>
    </wsdl:operation>
    <wsdl:operation name="wvnGetMeasure">
	  <wsdl:documentation>
	  Returns the measure of the sensor.
	  @param session Session token if the used login method is based on session token type.
	  @param deviceId Device identifier.
	  @return MeasureUnit.
	  @throws RtiError In error case.
	  </wsdl:documentation>
      <wsdl:input message="rtdi.weathervane:wvnGetMeasureRequest">
      </wsdl:input>
      <wsdl:output message="rtdi.weathervane:wvnGetMeasureResponse">
      </wsdl:output>
    <wsdl:fault message="rtdi.weathervane:rtdError" name="error"/>
    </wsdl:operation>
    <wsdl:operation name="wvnGetAbosluteDegrees">
	  <wsdl:documentation>
	  Is the absolute orientation (Device configuration).
	  @param session Session token if the used login method is based on session token type.
	  @param deviceId Device identifier.
	  @return degrees.
	  @throws RtiError In error case.
	  </wsdl:documentation>
      <wsdl:input message="rtdi.weathervane:wvnGetAbosluteDegreesRequest">
      </wsdl:input>
      <wsdl:output message="rtdi.weathervane:wvnGetAbosluteDegreesResponse">
      </wsdl:output>
    <wsdl:fault message="rtdi.weathervane:rtdError" name="error"/>
    </wsdl:operation>
    <wsdl:operation name="wvnSetMeasureStates">
	  <wsdl:documentation>
	  Sets the measure interval states.
	  @param session Session token if the used login method is based on session token type.
	  @param deviceId Device identifier.
	  @param states State (measure interval and alarm activation).
	  @throws RtiError In error case.
	  </wsdl:documentation>
      <wsdl:input message="rtdi.weathervane:wvnSetMeasureStatesRequest">
      </wsdl:input>
      <wsdl:output message="rtdi.weathervane:wvnSetMeasureStatesResponse">
      </wsdl:output>
    <wsdl:fault message="rtdi.weathervane:rtdError" name="error"/>
    </wsdl:operation>
    <wsdl:operation name="wvnGetMeasureStates">
	  <wsdl:documentation>
	  Returns the list of the measure interval states.
	  @param session Session token if the used login method is based on session token type.
	  @param deviceId Device identifier.
	  @return List of states information.
	  @throws RtiError In error case.
	  </wsdl:documentation>
      <wsdl:input message="rtdi.weathervane:wvnGetMeasureStatesRequest">
      </wsdl:input>
      <wsdl:output message="rtdi.weathervane:wvnGetMeasureStatesResponse">
      </wsdl:output>
    <wsdl:fault message="rtdi.weathervane:rtdError" name="error"/>
    </wsdl:operation>
   
    <!-- WEATHERVANE PORT TYPE OPS - END -->
    
  </wsdl:portType>

  
  <wsdl:binding name="gloria_rtdi_weathervaneSOAP" type="rtdi.weathervane:gloria_rtdi_weathervane">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    
    <!-- COMMON DEVICE BINDING OPS - BEGIN -->
    <wsdl:operation name="devGetDevice">
      <soap:operation soapAction="http://gloria.eu/rtdi.weathervane/devGetDevice"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    
    <wsdl:operation name="devGetDeviceProperties">
      <soap:operation soapAction="http://gloria.eu/rtdi.weathervane/devGetDeviceProperties"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    
    <wsdl:operation name="devGetDeviceProperty">
      <soap:operation soapAction="http://gloria.eu/rtdi.weathervane/devGetDeviceProperty"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    
    <wsdl:operation name="devUpdateDeviceProperty">
      <soap:operation soapAction="http://gloria.eu/rtdi.weathervane/devUpdateDeviceProperty"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    
     <wsdl:operation name="devUpdateDevicePropertyAsync">
      <soap:operation soapAction="http://gloria.eu/rtdi.weathervane/devUpdateDeviceProperty"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    
    <wsdl:operation name="devIsConnected">
      <soap:operation soapAction="http://gloria.eu/rtdi.weathervane/devIsConnected"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    
    <wsdl:operation name="devConnect">
      <soap:operation soapAction="http://gloria.eu/rtdi.weathervane/devConnect"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    
    <wsdl:operation name="devDisconnect">
      <soap:operation soapAction="http://gloria.eu/rtdi.weathervane/devDisconnect"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    
    <wsdl:operation name="devGetConfiguration">
      <soap:operation soapAction="http://gloria.eu/rtdi.weathervane/devGetConfiguration"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    
    <wsdl:operation name="devIsBlocked">
      <soap:operation soapAction="http://gloria.eu/rtdi.weathervane/devIsBlocked"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <!-- COMMON DEVICE BINDING OPS - END -->
    
     <!-- WEATHERVANE DEVICE BINDING OPS - BEGIN -->
     <wsdl:operation name="wvnGetMeasureUnit">
      <soap:operation soapAction="http://gloria.eu/rtdi.weathervane/wvnGetMeasureUnit"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="wvnGetMeasure">
      <soap:operation soapAction="http://gloria.eu/rtdi.weathervane/wvnGetMeasure"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="wvnGetAbosluteDegrees">
      <soap:operation soapAction="http://gloria.eu/rtdi.weathervane/wvnGetAbosluteDegrees"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="wvnSetMeasureStates">
      <soap:operation soapAction="http://gloria.eu/rtdi.weathervane/wvnSetMeasureStates"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="wvnGetMeasureStates">
      <soap:operation soapAction="http://gloria.eu/rtdi.weathervane/wvnGetMeasureStates"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
       
     <!-- WEATHERVANE DEVICE BINDING OPS - END -->
    
  </wsdl:binding>
  
  <wsdl:service name="gloria_rtdi_weathervane">
    <wsdl:documentation/>
    <wsdl:port binding="rtdi.weathervane:gloria_rtdi_weathervaneSOAP" name="gloria_rtdi_weathervaneSOAP">
      <soap:address location="http://localhost:8080/RTDI_Weathervane/services/gloria_rtdi_weathervaneSOAP"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>